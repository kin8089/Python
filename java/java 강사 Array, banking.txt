import java.util.Random;

public class Array {
	private String title;
	private int row;
	private int col;
	private int[][] array;
	
	public Array(String title, int row, int col) {		
		this.title = title;
		this.row = row;
		this.col = col;
		array = new int[row][col];
	}
	
	public int getRow() {
		return row;
	}

	public void setRow(int row) {
		this.row = row;
	}
	
	public int getCol() {
		return col;
	}

	public void setCol(int col) {
		this.col = col;
	}

	public int[][] getArray() {
		return array;
	}

	public void setArray(int[][] array) {
		this.array = array;
	}

	public void makeArrayData() {
		for(int r=0;r<row;r++) {
			for(int c=0;c<col;c++) {
				array[r][c] =getRandomNumber();
			}
		}
	}
	
	private int getRandomNumber() {
		Random r = new Random();
		return r.nextInt(12)+1;
	}
	
	public void printArray() {
		System.out.println("## "+title+" 출력");
		for(int r=0;r<row;r++) {
			for(int c=0;c<col;c++) {
				System.out.print(array[r][c]+" ") ;
			}
			System.out.println();
		}
	}
	
	public void findMatchNumber(Array src, Array desc) {
		int count = 0;
		System.out.print("##일치하는 숫자:");
		for(int r=0;r<row;r++) {
			for(int c=0;c<col;c++) {
				if(src.getArray()[r][c] == desc.getArray()[r][c]) {
					System.out.printf("[%1$d][%2$d]=%3$d,",r, c, src.getArray()[r][c]);
					count+=1;
				}
			}
		}//outer for end
		System.out.println("\n##일치하는 숫자 갯수 :"+count);
	}

}




public class ArrayTest {

	public static void main(String[] args) {
		Array src = new Array("첫번째 Array", 3, 4);
		Array dest = new Array("두번째 Array", 3, 4);
		src.makeArrayData();
		dest.makeArrayData();
		src.printArray();
		dest.printArray();
		src.findMatchNumber(src, dest);
	}

}



#################################################################################

public class Account {
	private int balance;
	 
	public Account(int balance) {		 
		this.balance = balance;
	}
	
	public int getBalance() {
		return balance;
	}
	public void setBalance(int balance) {
		this.balance = balance;
	}
	public boolean deposit(int amount) {
		boolean flag = false;
		if (amount> 0) {
			balance += amount;
			flag = true;
		}
		return flag;
	}
	public boolean withdraw(int amount) {
		boolean flag = false;
		if (amount> 0 && balance > amount) {
			balance -= amount;
			flag = true;
		}
		return flag;
	}
}




public class Customer {
	private String ssn;
	private String name;
	private Account account;
	
	public Customer(String ssn, String name) {	
		this.ssn = ssn;
		this.name = name;
	}
	public String getSsn() {
		return ssn;
	}
	public void setSsn(String ssn) {
		this.ssn = ssn;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public Account getAccount() {
		return account;
	}
	public void setAccount(Account account) {
		this.account = account;
	}
    public String toString() {
		return  name+"님의 현재 잔액: "+account.getBalance()+"원";
	}

}






public class BankingTest {

	public static void main(String[] args) {
		 Account h_account = new Account(10000);
		 Customer hong = new Customer("0001", "홍길동");
		 System.out.println(hong);
		 if (h_account.deposit(1000)) {
		    System.out.println("1000원 입금:입금성공");
		 }else {
			  System.out.println("1000원 입금:입금실패"); 
		  }
		 
		 System.out.println(hong.toString());
		 if (h_account.withdraw(5000)) {
			 System.out.println("5000원 출금:출금성공");
		  }else {
			  System.out.println("5000원 출금:출금실패"); 
		  }
		 System.out.println(hong );
		 if (h_account.withdraw(7000)) {
			 System.out.println("7000원 출금:입금성공");
		  }else {
			  System.out.println("7000원 출금:출금실패"); 
		  }
		 System.out.println(hong ); 
	}

}